package co.tracert.demo.model;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter;

import lombok.NonNull;

@DynamoDBTable(tableName = "ProfileInfo")
public class Profile {

	private @NonNull String id;
	private @NonNull String sex;
	private @NonNull String firstName;
	private @NonNull String lastName;
	private @NonNull String aadhaar;
	private Employment employment;

	@DynamoDBDocument
	class Employment {
		private EmploymentType employmentType;
		private String company;
		private String designation;
		private Date workingSince;

		@DynamoDBAttribute(attributeName = "employmentType")
		EmploymentType getEmploymentType() {
			return employmentType;
		}

		void setEmploymentType(EmploymentType employmentType) {
			this.employmentType = employmentType;
		}

		@DynamoDBAttribute(attributeName = "company")
		String getCompany() {
			return company;
		}

		void setCompany(String company) {
			this.company = company;
		}

		@DynamoDBAttribute(attributeName = "designation")
		String getDesignation() {
			return designation;
		}

		void setDesignation(String designation) {
			this.designation = designation;
		}

		@DynamoDBAttribute(attributeName = "workingSince")
		Date getWorkingSince() {
			return workingSince;
		}

		void setWorkingSince(Date workingSince) {
			this.workingSince = workingSince;
		}
	}

	enum EmploymentType {
		GOVERNMENT, PRIVATE, MILITARY;
	}

	enum Sex {
		MALE, FEMALE;
	}

	@DynamoDBIgnore
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(firstName);
		builder.append(File.separator);
		builder.append(lastName);
		builder.append(File.separator);
		builder.append(sex);
		builder.append(File.separator);
		builder.append(aadhaar);

		builder.append(File.separator);
		builder.append(employment);
		return builder.toString();
	}

	@DynamoDBIgnore
	public static Profile getDefault() {
		Profile profile = new Profile();
		profile.setFirstName("Srikanth");
		profile.setLastName("Kotekar");
		profile.setSex(Sex.MALE.toString());
		profile.setAadhaar("aa0011");

		Employment employment = new Profile().new Employment();
		employment.setCompany("TCSL");
		employment.setDesignation("Consultant");
		employment.setEmploymentType(EmploymentType.PRIVATE);
		try {
			employment.setWorkingSince(new SimpleDateFormat("dd-MM-yyyy").parse("03-05-2004"));
		} catch (ParseException e) {
			e.printStackTrace();
		}

		profile.setEmployment(employment);
		System.out.println(profile);

		return profile;
		/*
		 * logging.level.root=WARN logging.level.org.springframework.web=DEBUG
		 * logging.level.org.hibernate=ERROR logging.level.co.tracert=DEBUG
		 */
	}

	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@DynamoDBAttribute(attributeName = "sex")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@DynamoDBAttribute(attributeName = "firstName")
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@DynamoDBAttribute(attributeName = "lastName")
	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@DynamoDBAttribute(attributeName = "aadhaar")
	public String getAadhaar() {
		return aadhaar;
	}

	public void setAadhaar(String aadhaar) {
		this.aadhaar = aadhaar;
	}

	@DynamoDBTypeConverted(converter = EmployeeTypeConverter.class)
	@DynamoDBAttribute(attributeName = "employee")
	public Employment getEmployment() {
		return employment;
	}

	static public class EmployeeTypeConverter implements DynamoDBTypeConverter<String, Employment> {

		@Override
		public String convert(Employment e) {
			Employment employment = (Employment) e;
			String emp = null;
			try {
				if (employment != null) {
					emp = String.format("%s x %s x %s x %s", employment.getCompany(), employment.getDesignation(),
							employment.getEmploymentType().toString(), employment.getWorkingSince());
				}
			} catch (Exception ex) {
				ex.printStackTrace();
			}
			System.out.println("employee getting saved - " + emp);
			return emp;
		}

		@Override
		public Employment unconvert(String s) {
			Employment employment = new Profile().new Employment();
			System.out.println("data to unconvert - " + s);

			try {
				if (s != null && s.length() != 0) {
					String[] data = s.split("x");
					employment.setCompany(data[0].trim());
					employment.setDesignation(data[1].trim());
					employment.setEmploymentType(EmploymentType.valueOf(data[2].trim()));
					//employment.setWorkingSince(new SimpleDateFormat("dd-MM-yyyy").parse(data[3].trim()));
				}
			} catch (Exception e) {
				e.printStackTrace();
			}

			return employment;
		}

	}

	public void setEmployment(Employment employment) {
		this.employment = employment;
	}
}